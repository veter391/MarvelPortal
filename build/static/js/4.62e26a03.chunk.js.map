{"version":3,"sources":["components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","components/comicsList/ComicsList.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/pages/ComicsPage.js"],"names":["ErrorMessage","_jsx","src","img","alt","style","display","width","height","objectFit","margin","useMarvelService","_useHttp","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","response","data","_args","arguments","wrap","_context","prev","next","length","undefined","fetch","sent","ok","Error","concat","status","json","abrupt","t0","message","stop","_x","apply","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","num","offset","res","results","map","_transformCharacter","_x2","getCharacter","_ref2","_callee2","id","_context2","_x3","getAllComics","_ref3","_callee3","_args3","_context3","_transformComics","getComic","_ref4","_callee4","_context4","_x4","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","slice","_comics$textObjects$","title","pageCount","language","textObjects","price","prices","ComicsList","comicsList","setComicsList","newItemLoading","setnewItemLoading","_useState5","_useState6","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","_useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","_toConsumableArray","arr","item","i","className","children","_jsxs","Link","to","renderItems","errorMessage","spinner","Spinner","disabled","onClick","AppBanner","avengers","avengersLogo","Comics","_Fragment"],"mappings":"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","file":"static/js/4.62e26a03.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        // <img src={process.env.PUBLIC_URL + '/error.gif'} alt=\"error\" /> exemple how tu use info from global folder\r\n        <img src={img} alt=\"error\" style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}}/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import { useHttp } from \"../hooks/http.hook\";\r\n\r\n\r\nconst useMarvelService = () => {\r\n\r\n    const { loading, request, error, clearError } = useHttp()\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n    // personal api key\r\n    const _apiKey = 'apikey=d0cba7230807643ac1c3837fafb40afd'\r\n\r\n    // find all characters\r\n    const getAllCharacters = async (num, offset) => {\r\n        const res = await request(`${_apiBase}characters?limit=${num}&offset=${offset}&${_apiKey}`);\r\n\r\n        // map return callback function to each element is the same => ''.map(item => _transformCharacter(item))''\r\n        return res.data.results.map(_transformCharacter); \r\n    }\r\n\r\n    // return character with uniq id\r\n    const getCharacter = async id => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\r\n        // return transformed element\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        const res = await request(\r\n            `${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n        );\r\n        return res.data.results.map(_transformComics);\r\n    };\r\n\r\n    const getComic = async (id) => {\r\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n        return _transformComics(res.data.results[0]);\r\n    };\r\n\r\n    // if function or variable starts with '_' be careful with changes!! try to NOT CHANGE IT\r\n    const _transformCharacter = (char) => {\r\n        // transform and return new object and add this to state(obj)\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? char.description : 'Not info about this character !',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items.length === 0 ? [{name: 'Not comics about this character !'}] : char.comics.items.slice(0, 10)\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n        return {\r\n            id: comics.id,\r\n            title: comics.title,\r\n            description: comics.description || \"There is no description\",\r\n            pageCount: comics.pageCount\r\n                ? `${comics.pageCount} p.`\r\n                : \"No information about the number of pages\",\r\n            thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n            language: comics.textObjects[0]?.language || \"en-us\",\r\n            price: comics.prices[0].price\r\n                ? `${comics.prices[0].price}$`\r\n                : \"not available\",\r\n        };\r\n    };\r\n\r\n    // return usable service variables\r\n    return { loading, error, getAllCharacters, getCharacter, clearError, getAllComics, getComic }\r\n\r\n}\r\n\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport function useHttp() {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        // before to send a request, setting loading(true)\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, { method, body, headers });\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`)\r\n            }\r\n            \r\n            const data = await response.json();\r\n\r\n            // if everything gone okay disable loading\r\n            setLoading(false);\r\n            return data;\r\n\r\n        } catch (error) {\r\n            // if error disable loading\r\n            setLoading(false);\r\n            setError(error.message);\r\n            throw error;\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n\n    const [comicsList, setComicsList] = useState([]);\n    const [newItemLoading, setnewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const { loading, error, getAllComics } = useMarvelService();\n\n    useEffect(() => {\n        onRequest(offset, true);\n    }, [])\n\n    const onRequest = (offset, initial) => {\n        initial ? setnewItemLoading(false) : setnewItemLoading(true);\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n    }\n\n    const onComicsListLoaded = (newComicsList) => {\n        let ended = false;\n        if (newComicsList.length < 8) {\n            ended = true;\n        }\n        setComicsList([...comicsList, ...newComicsList]);\n        setnewItemLoading(false);\n        setOffset(offset + 8);\n        setComicsEnded(ended);\n    }\n\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li className=\"comics__item\" key={i}>\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\" />\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        })\n\n        return (\n            <ul className=\"comics__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    const items = renderItems(comicsList);\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading && !newItemLoading ? <Spinner /> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n            {spinner}\n            {items}\n            <button\n                disabled={newItemLoading}\n                style={{ 'display': comicsEnded ? 'none' : 'block' }}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}>\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import ComicsList from \"../comicsList/ComicsList\";\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\n\r\nconst Comics = () => {\r\n    return (\r\n        <>\r\n            <AppBanner />\r\n            <ComicsList />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Comics;"],"sourceRoot":""}